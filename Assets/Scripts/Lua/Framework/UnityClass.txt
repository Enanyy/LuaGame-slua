
require("Utility")
require("Stack")
require("Queue")
--应用System、Unity的类
Application = UnityEngine.Application



GameObject                      = UnityEngine.GameObject
Object                          = UnityEngine.Object
Vector3                         = UnityEngine.Vector3
Quaternion                      = UnityEngine.Quaternion
BoxCollider                     = UnityEngine.BoxCollider
CapsuleCollider                 = UnityEngine.CapsuleCollider
Camera                          = UnityEngine.Camera
CameraClearFlags                = UnityEngine.CameraClearFlags
AudioListener                   = UnityEngine.AudioListener

SceneManager                    = UnityEngine.SceneManagement.SceneManager

--引用UnityEngine.Time
Time                            = UnityEngine.Time

--Unity中的AssetBundle类
AssetBundle                     = UnityEngine.AssetBundle

Animation                       = UnityEngine.Animation
AnimationState                  = UnityEngine.AnimationState
WrapMode                        = UnityEngine.WrapMode
Screen                          = UnityEngine.Screen

Input                           = UnityEngine.Input
Physics                         = UnityEngine.Physics
LayerMask                       = UnityEngine.LayerMask
KeyCode                         = UnityEngine.KeyCode

Mathf                           = UnityEngine.Mathf

------------------------------------------function Begin -------------------------------------
Instantiate                     = GameObject.Instantiate
Destroy                         = GameObject.Destroy

------------------------------------------function End ---------------------------------------


------------------------------------------LuaHelper Begin-----------------------------------------
local _GetPosition              = LuaHelper.GetPosition
local _SetPosition              = LuaHelper.SetPosition
local _GetLocalPosition         = LuaHelper.GetLocalPosition
local _SetLocalPosition         = LuaHelper.SetLocalPosition
local _SetScale                 = LuaHelper.SetScale
local _GetScale                 = LuaHelper.GetScale
local _SetLocalRotation         = LuaHelper.SetLocalRotation
local _GetLocalRotation         = LuaHelper.GetLocalRotation
local _SetRotation              = LuaHelper.SetRotation
local _GetRotation              = LuaHelper.GetRotation
local _SetLocalEuler            = LuaHelper.SetLocalEuler
local _GetLocalEuler            = LuaHelper.GetLocalEuler
local _SetEuler                 = LuaHelper.SetEuler
local _GetEuler                 = LuaHelper.GetEuler
local _SetForward               = LuaHelper.SetForward
local _GetForward               = LuaHelper.GetForward

local _SetParent                = LuaHelper.SetParent
local _AddComponent             = LuaHelper.AddComponent
local _GetComponent             = LuaHelper.GetComponent
local _SetActive                = LuaHelper.SetActive

function GetPosition(go, position)
    local pos = position or  Vector3.zero
    local x, y, z = _GetPosition(go, nil, nil, nil)
    pos:Set(x, y, z)
    return pos
end

function SetPosition(go, position)
    if go then
        _SetPosition(go, position.x, position.y, position.z)
    end
end

function GetLocalPosition(go, position)
    local pos = position or Vector3.zero
    local x, y, z = _GetLocalPosition(go, nil, nil, nil)
    pos:Set(x, y, z)
    return pos
end

function SetLocalPosition(go, position)
    if go then
        _SetLocalPosition(go, position.x, position.y, position.z)
    end
end

function SetScale(go, scale)
    if go then
        _SetScale(go, scale.x, scale.y, scale.z)
    end 
end

function GetScale(go, scale)
    local pos = scale or  Vector3.zero
    local x, y, z = _GetScale(go, nil, nil, nil)
    pos:Set(x, y, z)
    return pos
end

function GetForward(go, forward)
    local pos = forward or  Vector3.zero
    local x, y, z = _GetForward(go, nil, nil, nil)
    pos:Set(x, y, z)
    return pos
end

function SetForward(go, forward)
    if go then
        _SetForward(go, forward.x, forward.y, forward.z)
    end
end

function SetLocalRotation(go, rotation)
    if go then
        _SetLocalRotation(go, rotation.x, rotation.y, rotation.z, rotation.w)
    end
end

function GetLocalRotation(go, rotation)
    local r = rotation or  Quaternion.identity
    local x, y, z, w = _GetLocalRotation(go, nil, nil, nil, nil)
    r:Set(x, y, z, w)
    return r
end

function SetRotation(go, rotation)
    if go then
        _SetRotation(go, rotation.x, rotation.y, rotation.z, rotation.w)
    end
end

function GetRotation(go, rotation)
    local r = rotation or  Quaternion.identity
    local x, y, z, w = _GetRotation(go, nil, nil, nil, nil)
    r:Set(x, y, z, w)
    return r
end

function GetLocalEuler(go, euler)
    local pos = euler or  Vector3.zero
    local x, y, z = _GetLocalEuler(go, nil, nil, nil)
    pos:Set(x, y, z)
    return pos
end

function SetLocalEuler(go, euler)
    if go then
        _SetLocalEuler(go, euler.x, euler.y, euler.z)
    end
end

function GetEuler(go, euler)
    local pos = euler or  Vector3.zero
    local x, y, z = _GetEuler(go, nil, nil, nil)
    pos:Set(x, y, z)
    return pos
end

function SetEuler(go, euler)
    if go then
        _SetEuler(go, euler.x, euler.y, euler.z)
    end
end

function SetParent (go, parent)
    if go then
        _SetParent(go, parent)
    end
end

function AddComponent(go, component)

    return _AddComponent(go, component)

end

function GetComponent(go, component)

    return _GetComponent(go, component)

end

function SetActive(go, active)
    if active then
        _SetActive(go, 1)
    else
        _SetActive(go, 0)
    end
end

------------------------------------------Helper End-------------------------------------------

