require("Window")

--UI_Main继承于Window
UI_Main = Class("UI_Main",Window)

local this = UI_Main

function this:ctor(path)
    self.path  = path
    self.windowType = WindowType.Root --主界面
    self.useMask = false 
end


function this:Start()

    local fadeWindow = self.transform:Find("FadeWindow")
    local fadeButton = fadeWindow:GetComponent(UIButton) 
    if fadeButton then
        fadeButton.onClick:Add(EventDelegate(function() 
            print("Click FadeWindow")
            WindowManager:Open(UI_FadeWindow)
        end))
    end

    local scaleWindow = self.transform:Find("ScaleWindow")
    local scaleButton = scaleWindow:GetComponent(UIButton) 
    if scaleButton then
        scaleButton.onClick:Add(EventDelegate(function() 
            print("Click ScaleWindow")
            WindowManager:Open(UI_ScaleWindow)
        end))
    end


    local moveWindow = self.transform:Find("MoveWindow")
    local moveButton = moveWindow:GetComponent(UIButton) 

    if moveButton then
        moveButton.onClick:Add(EventDelegate(function() 
            print("Click MoveWindow")
            WindowManager:Open(UI_MoveWindow)
        end))
    end

    local popWindow = self.transform:Find("PopWindow")
    local popButton = popWindow:GetComponent(UIButton) 

    if popButton then
        popButton.onClick:Add(EventDelegate(function() 
            print("Click PopWindow")
            WindowManager:Open(UI_PopWindow)
        end))
    end
   
    local widget = self.transform:Find("Widget")
    local widgetButton = widget:GetComponent(UIButton) 
    if widgetButton then
        widgetButton.onClick:Add(EventDelegate(function() 
            print("Click Widget")
            WindowManager:Open(UI_Widget)
        end))
    end
    
end
