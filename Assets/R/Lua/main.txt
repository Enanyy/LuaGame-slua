require "UnityClass"
require "WindowManager"

function main()
	TestProtobuf()

	WindowManager:Initialize()
	WindowManager:Open(UI_Main)
end

function TestProtobuf()

	local person_pb =  require 'Protol.person_pb'
  
    local msg = person_pb.Person()
    msg.id = 10
	msg.age = 30
	msg.name = "aaaaa"
	msg.email = "bbbbbb"

	msg.header.cmd = 11
	msg.header.seq = 1000

	msg.array:append(1)                              
	msg.array:append(2)   

	local pb_data = msg:SerializeToString()   

	local ba = Slua.ByteArray()
	local length = string.len(pb_data)
	print(length)

	for i = 1, length do
		local b = string.byte(pb_data,i)
		ba:WriteByte(b)
	end
	
	LuaHelper.ProtobufString(ba)

	
end

function TestParseProtobuf(buffer)

    local pb_data = Slua.ToString(buffer:GetData())

	local person_pb = require "Protol.person_pb" 
	local msg = person_pb.Person()
	msg:ParseFromString(pb_data)
	--tostring 不会打印默认值
	print('person_pb decoder: '..tostring(msg)..'age: '..msg.age..'\nemail: '..msg.email)

end